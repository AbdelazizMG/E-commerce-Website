{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_AIComponent = _resolveComponent(\"AIComponent\");\n  const _component_ProductList = _resolveComponent(\"ProductList\");\n  const _component_CartComponent = _resolveComponent(\"CartComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header, {\n    onProductsReceived: $options.updateProductList\n  }, null, 8 /* PROPS */, [\"onProductsReceived\"]), _createVNode(_component_AIComponent, {\n    onProductsReceived: $options.updateProductList\n  }, null, 8 /* PROPS */, [\"onProductsReceived\"]), _createVNode(_component_ProductList, {\n    ref: \"productListComponent\",\n    onAddedToCart: $options.showCart\n  }, null, 8 /* PROPS */, [\"onAddedToCart\"]), _createVNode(_component_CartComponent, {\n    isVisible: $data.isCartVisible,\n    cartItems: $data.cartItems,\n    onCloseCart: $options.hideCart,\n    onUpdateCart: $options.updateCartItems\n  }, null, 8 /* PROPS */, [\"isVisible\", \"cartItems\", \"onCloseCart\", \"onUpdateCart\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_Header","onProductsReceived","$options","updateProductList","_component_AIComponent","_component_ProductList","ref","onAddedToCart","showCart","_component_CartComponent","isVisible","$data","isCartVisible","cartItems","onCloseCart","hideCart","onUpdateCart","updateCartItems"],"sources":["C:\\Users\\sigmaa\\Desktop\\E-Commerce\\E-commerce-Website\\chatbot-app\\src\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div id = \"app\">\r\n    <Header @products-received=\"updateProductList\"/>\r\n    <AIComponent @products-received=\"updateProductList\"/>\r\n    <ProductList ref=\"productListComponent\" @added-to-cart=\"showCart\"/>\r\n    <CartComponent :isVisible=\"isCartVisible\" :cartItems=\"cartItems\" @close-cart=\"hideCart\" @update-cart=\"updateCartItems\"/>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"./HeaderComponent.vue\";\r\nimport AIComponent from \"./AIComponent.vue\";\r\nimport ProductList from \"./ProductList.vue\";\r\nimport CartComponent from \"./CartComponent.vue\";\r\nimport axios from \"axios\";\r\nimport cartService from \"@/cart-service\";\r\n\r\nexport default {\r\n  components: { Header, AIComponent, ProductList, CartComponent },\r\n  data() {\r\n    return { \r\n      products: [],\r\n      pageName : 'LeftOvers',\r\n      isCartVisible: false, \r\n      cartItems: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      console.log(\"fetchProducts() is being called...\");\r\n      try {\r\n        const response = await axios.get(\r\n        `http://127.0.0.1:8000/api/Homepage/`\r\n      );\r\n      console.log(\"Response from API:\", response.data);\r\n      //console.log(\"Request:\", this.query);\r\n      \r\n      // Store search results\r\n      this.results = response.data.results; \r\n      //this.$emit(\"products-received\", response.data);\r\n      this.updateProductList(response.data)\r\n\r\n      } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      this.$emit(\"products-received\", []); // Emit an empty array on error\r\n    }\r\n    },\r\n    updateProductList(products) {\r\n        // Access the ProductList component using a ref\r\n        this.$refs.productListComponent.updateProducts(products);\r\n    }, \r\n    showCart() {\r\n      console.log(\"Working\"); \r\n      this.isCartVisible = true;\r\n    },\r\n    hideCart() {\r\n      this.isCartVisible = false;\r\n    },  \r\n    addToCart(product) {\r\n      cartService.addItem(product);\r\n      this.cartItems = cartService.getCartItems();\r\n      this.showCart();\r\n    },\r\n    updateCartItems(items) {\r\n      this.cartItems = items;\r\n    },\r\n  },\r\n  mounted() {\r\n    // this.$nextTick(() => {\r\n    //   this.$refs.ProductList = this.$refs.productListComponent;\r\n    //   // Now you can safely access this.$refs.productList\r\n    //   console.log(this.$refs.productList); // This will now work correctly\r\n    // });\r\n    this.fetchProducts();\r\n    document.title = `${this.pageName}`;\r\n  },\r\n  created() {\r\n     //this.fetchProducts();\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\nheader {\r\n  /* Basic header styling */\r\n  background-color: #f0f0f0; /* Example background color */\r\n  padding: 10px;\r\n}\r\n\r\n.header-content {\r\n    display: flex;\r\n    align-items: center; /* Vertically center the logo and title */\r\n    justify-content: flex-start; /* Align items to the start of the container */\r\n}\r\n\r\n.logo {\r\n  max-height: 50px; /* Adjust as needed */\r\n  margin-right: 10px; /* Space between logo and title */\r\n}\r\n\r\nh1 {\r\n  /* Basic title styling */\r\n  margin: 0; /* Remove default margins */\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,EAAE,EAAG;AAAK;;;;;;uBAAfC,mBAAA,CAMM,OANNC,UAMM,GALJC,YAAA,CAAgDC,iBAAA;IAAvCC,kBAAiB,EAAEC,QAAA,CAAAC;EAAiB,iDAC7CJ,YAAA,CAAqDK,sBAAA;IAAvCH,kBAAiB,EAAEC,QAAA,CAAAC;EAAiB,iDAClDJ,YAAA,CAAmEM,sBAAA;IAAtDC,GAAG,EAAC,sBAAsB;IAAEC,aAAa,EAAEL,QAAA,CAAAM;8CACxDT,YAAA,CAAwHU,wBAAA;IAAxGC,SAAS,EAAEC,KAAA,CAAAC,aAAa;IAAGC,SAAS,EAAEF,KAAA,CAAAE,SAAS;IAAGC,WAAU,EAAEZ,QAAA,CAAAa,QAAQ;IAAGC,YAAW,EAAEd,QAAA,CAAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}