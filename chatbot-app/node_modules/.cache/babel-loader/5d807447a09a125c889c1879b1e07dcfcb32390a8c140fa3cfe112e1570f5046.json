{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"chatbot-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-window\"\n};\nconst _hoisted_4 = {\n  class: \"chat-input\"\n};\nconst _hoisted_5 = {\n  class: \"side-panel\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Chatbot Container \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Chat Window \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chatHistory, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.sender])\n    }, _toDisplayString(message.text), 3 /* TEXT, CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Chat Input \"), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userInput = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Type your query...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")])]), _createCommentVNode(\" Product Side Panel \"), _createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Products\", -1 /* HOISTED */)), $data.products && $data.products.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, (product, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"product\"\n    }, [_createElementVNode(\"img\", {\n      src: product.image,\n      alt: \"Product Image\"\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"p\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(product.price), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[3] || (_cache[3] = [_createElementVNode(\"p\", null, \"No products found. Try searching!\", -1 /* HOISTED */)])))])]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","chatHistory","message","index","_normalizeClass","sender","text","_hoisted_4","_cache","$event","userInput","onKeyup","_withKeys","args","$options","sendMessage","placeholder","onClick","_hoisted_5","products","length","_hoisted_6","product","src","image","alt","_hoisted_7","_toDisplayString","name","price","_hoisted_8"],"sources":["C:\\Users\\sigmaa\\Desktop\\E-Commerce\\E-commerce-Website\\chatbot-app\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- Chatbot Container -->\r\n    <div class=\"chatbot-container\">\r\n      <!-- Chat Window -->\r\n      <div class=\"chat-window\">\r\n        <div v-for=\"(message, index) in chatHistory\" :key=\"index\" :class=\"['message', message.sender]\">\r\n          {{ message.text }}\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Chat Input -->\r\n      <div class=\"chat-input\">\r\n        <input v-model=\"userInput\" @keyup.enter=\"sendMessage\" placeholder=\"Type your query...\" />\r\n        <button @click=\"sendMessage\">Send</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Product Side Panel -->\r\n    <div class=\"side-panel\">\r\n      <h3>Products</h3>\r\n      <div v-if=\"products && products.length > 0\">\r\n        <div v-for=\"(product, index) in products\" :key=\"index\" class=\"product\">\r\n          <img :src=\"product.image\" alt=\"Product Image\" />\r\n          <p>{{ product.name }}</p>\r\n          <p>{{ product.price }}</p>\r\n        </div>\r\n      </div>\r\n      <div v-else>\r\n        <p>No products found. Try searching!</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInput: \"\", // User's chat input\r\n      chatHistory: [], // Chat history\r\n      products: [], // List of products fetched from web scraping\r\n    };\r\n  },\r\n  methods: {\r\n    async sendMessage() {\r\n      if (!this.userInput.trim()) return;\r\n\r\n      // Add user's message to chat history\r\n      this.chatHistory.push({ sender: \"user\", text: this.userInput });\r\n\r\n      // Call your web scraping function here\r\n      const query = this.userInput;\r\n      this.userInput = \"\"; // Clear input box\r\n\r\n      // Simulate a bot response (replace this with your web scraping logic)\r\n      this.chatHistory.push({ sender: \"bot\", text: `Searching for \"${query}\"...` });\r\n\r\n      // Fetch products (replace this with your web scraping logic)\r\n      const products = await this.fetchProducts(query);\r\n      this.products = products;\r\n    },\r\n    async fetchProducts(query) {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/search?query=${query}`);\r\n        const products = await response.json();\r\n        return products;\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n        return []; // Return an empty array in case of error\r\n      }\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  display: flex;\r\n  height: 100vh;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.chatbot-container {\r\n  flex: 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid #ccc;\r\n}\r\n\r\n.chat-window {\r\n  flex: 1;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n\r\n.message {\r\n  margin: 5px 0;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  max-width: 70%;\r\n}\r\n\r\n.message.user {\r\n  background-color: #e1ffc7;\r\n  align-self: flex-end;\r\n}\r\n\r\n.message.bot {\r\n  background-color: #f1f1f1;\r\n  align-self: flex-start;\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n\r\n.chat-input input {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.chat-input button {\r\n  margin-left: 10px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.side-panel {\r\n  flex: 1;\r\n  padding: 10px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.product {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product img {\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 5px;\r\n}\r\n\r\n.product p {\r\n  margin: 5px 0;\r\n}\r\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAENC,KAAK,EAAC;AAAmB;;EAEvBA,KAAK,EAAC;AAAa;;EAOnBA,KAAK,EAAC;AAAY;;EAOpBA,KAAK,EAAC;AAAY;;EAnB3BC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,mBAAA,uBAA0B,EAC1BC,mBAAA,CAaM,OAbNC,UAaM,GAZJF,mBAAA,iBAAoB,EACpBC,mBAAA,CAIM,OAJNE,UAIM,I,kBAHJL,mBAAA,CAEMM,SAAA,QARdC,WAAA,CAMwCC,KAAA,CAAAC,WAAW,EANnD,CAMqBC,OAAO,EAAEC,KAAK;yBAA3BX,mBAAA,CAEM;MAFwCD,GAAG,EAAEY,KAAK;MAAGb,KAAK,EANxEc,eAAA,aAMsFF,OAAO,CAACG,MAAM;wBACvFH,OAAO,CAACI,IAAI;oCAInBZ,mBAAA,gBAAmB,EACnBC,mBAAA,CAGM,OAHNY,UAGM,G,gBAFJZ,mBAAA,CAAyF;IAbjG,uBAAAa,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAawBT,KAAA,CAAAU,SAAS,GAAAD,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,MAbzCI,SAAA,KAAAC,IAAA,KAaiDC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEG,WAAW,EAAC;iEAAlDhB,KAAA,CAAAU,SAAS,E,GACzBf,mBAAA,CAA0C;IAAjCsB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,E,KAIrCnB,mBAAA,wBAA2B,EAC3BC,mBAAA,CAYM,OAZNuB,UAYM,G,0BAXJvB,mBAAA,CAAiB,YAAb,UAAQ,sBACDK,KAAA,CAAAmB,QAAQ,IAAInB,KAAA,CAAAmB,QAAQ,CAACC,MAAM,Q,cAAtC5B,mBAAA,CAMM,OA3BZ6B,UAAA,I,kBAsBQ7B,mBAAA,CAIMM,SAAA,QA1BdC,WAAA,CAsBwCC,KAAA,CAAAmB,QAAQ,EAtBhD,CAsBqBG,OAAO,EAAEnB,KAAK;yBAA3BX,mBAAA,CAIM;MAJqCD,GAAG,EAAEY,KAAK;MAAEb,KAAK,EAAC;QAC3DK,mBAAA,CAAgD;MAA1C4B,GAAG,EAAED,OAAO,CAACE,KAAK;MAAEC,GAAG,EAAC;4BAvBxCC,UAAA,GAwBU/B,mBAAA,CAAyB,WAAAgC,gBAAA,CAAnBL,OAAO,CAACM,IAAI,kBAClBjC,mBAAA,CAA0B,WAAAgC,gBAAA,CAApBL,OAAO,CAACO,KAAK,iB;qDAGvBrC,mBAAA,CAEM,OA9BZsC,UAAA,EAAAtB,MAAA,QAAAA,MAAA,OA6BQb,mBAAA,CAAwC,WAArC,mCAAiC,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}