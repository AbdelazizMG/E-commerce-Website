{"ast":null,"code":"import Header from \"./HeaderComponent.vue\";\nimport AIComponent from \"./AIComponent.vue\";\nimport ProductList from \"./ProductList.vue\";\nimport CartComponent from \"./CartComponent.vue\";\nimport axios from \"axios\";\nimport cartService from \"@/cart-service\";\nexport default {\n  components: {\n    Header,\n    AIComponent,\n    ProductList,\n    CartComponent\n  },\n  data() {\n    return {\n      products: [],\n      pageName: 'LeftOvers',\n      isCartVisible: false,\n      cartItems: []\n    };\n  },\n  methods: {\n    async fetchProducts() {\n      console.log(\"fetchProducts() is being called...\");\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/api/Homepage/`);\n        console.log(\"Response from API:\", response.data);\n        //console.log(\"Request:\", this.query);\n\n        // Store search results\n        this.results = response.data.results;\n        //this.$emit(\"products-received\", response.data);\n        this.updateProductList(response.data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n        this.$emit(\"products-received\", []); // Emit an empty array on error\n      }\n    },\n    updateProductList(products) {\n      // Access the ProductList component using a ref\n      this.$refs.productListComponent.updateProducts(products);\n    },\n    showCart() {\n      console.log(\"Working\");\n      this.isCartVisible = true;\n    },\n    hideCart() {\n      this.isCartVisible = false;\n    },\n    addToCart(product) {\n      cartService.addItem(product);\n      this.cartItems = cartService.getCartItems();\n      this.showCart();\n      console.log(\"Updated cart items:\", this.cartItems.length);\n      //this.$emit('update-cart', this.cartItems);\n    },\n    updateCartItems(items) {\n      this.cartItems = items;\n    }\n  },\n  mounted() {\n    this.fetchProducts();\n    document.title = `${this.pageName}`;\n  },\n  created() {\n    //this.fetchProducts();\n  }\n};","map":{"version":3,"names":["Header","AIComponent","ProductList","CartComponent","axios","cartService","components","data","products","pageName","isCartVisible","cartItems","methods","fetchProducts","console","log","response","get","results","updateProductList","error","$emit","$refs","productListComponent","updateProducts","showCart","hideCart","addToCart","product","addItem","getCartItems","length","updateCartItems","items","mounted","document","title","created"],"sources":["C:\\Users\\sigmaa\\Desktop\\E-Commerce\\E-commerce-Website\\chatbot-app\\src\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div id = \"app\">\r\n    <Header @products-received=\"updateProductList\"/>\r\n    <AIComponent @products-received=\"updateProductList\"/>\r\n    <ProductList ref=\"productListComponent\" @added-to-cart=\"addToCart\"/>\r\n    <CartComponent  :cartItems=\"cartItems\" @close-cart=\"hideCart\" @update-cart=\"updateCartItems\"/>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"./HeaderComponent.vue\";\r\nimport AIComponent from \"./AIComponent.vue\";\r\nimport ProductList from \"./ProductList.vue\";\r\nimport CartComponent from \"./CartComponent.vue\";\r\nimport axios from \"axios\";\r\nimport cartService from \"@/cart-service\";\r\n\r\nexport default {\r\n  components: { Header, AIComponent, ProductList, CartComponent },\r\n  data() {\r\n    return { \r\n      products: [],\r\n      pageName : 'LeftOvers',\r\n      isCartVisible: false, \r\n      cartItems: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      console.log(\"fetchProducts() is being called...\");\r\n      try {\r\n        const response = await axios.get(\r\n        `http://127.0.0.1:8000/api/Homepage/`\r\n      );\r\n      console.log(\"Response from API:\", response.data);\r\n      //console.log(\"Request:\", this.query);\r\n      \r\n      // Store search results\r\n      this.results = response.data.results; \r\n      //this.$emit(\"products-received\", response.data);\r\n      this.updateProductList(response.data)\r\n\r\n      } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      this.$emit(\"products-received\", []); // Emit an empty array on error\r\n    }\r\n    },\r\n    updateProductList(products) {\r\n        // Access the ProductList component using a ref\r\n        this.$refs.productListComponent.updateProducts(products);\r\n    }, \r\n    showCart() {\r\n      console.log(\"Working\"); \r\n      this.isCartVisible = true;\r\n    },\r\n    hideCart() {\r\n      this.isCartVisible = false;\r\n    },  \r\n    addToCart(product) {\r\n      cartService.addItem(product);\r\n      this.cartItems = cartService.getCartItems();\r\n      this.showCart();\r\n      console.log(\"Updated cart items:\", this.cartItems.length);\r\n      //this.$emit('update-cart', this.cartItems);\r\n    },\r\n    updateCartItems(items) {\r\n      this.cartItems = items;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchProducts();\r\n    document.title = `${this.pageName}`;\r\n  },\r\n  created() {\r\n     //this.fetchProducts();\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\nheader {\r\n  /* Basic header styling */\r\n  background-color: #f0f0f0; /* Example background color */\r\n  padding: 10px;\r\n}\r\n\r\n.header-content {\r\n    display: flex;\r\n    align-items: center; /* Vertically center the logo and title */\r\n    justify-content: flex-start; /* Align items to the start of the container */\r\n}\r\n\r\n.logo {\r\n  max-height: 50px; /* Adjust as needed */\r\n  margin-right: 10px; /* Space between logo and title */\r\n}\r\n\r\nh1 {\r\n  /* Basic title styling */\r\n  margin: 0; /* Remove default margins */\r\n}\r\n</style>\r\n"],"mappings":"AAWA,OAAOA,MAAK,MAAO,uBAAuB;AAC1C,OAAOC,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,WAAU,MAAO,gBAAgB;AAExC,eAAe;EACbC,UAAU,EAAE;IAAEN,MAAM;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAc,CAAC;EAC/DI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAO,EAAI,WAAW;MACtBC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpBC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjD,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAChC,qCACF,CAAC;QACDH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACT,IAAI,CAAC;QAChD;;QAEA;QACA,IAAI,CAACW,OAAM,GAAIF,QAAQ,CAACT,IAAI,CAACW,OAAO;QACpC;QACA,IAAI,CAACC,iBAAiB,CAACH,QAAQ,CAACT,IAAI;MAEpC,EAAE,OAAOa,KAAK,EAAE;QAChBN,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE;MACvC;IACA,CAAC;IACDF,iBAAiBA,CAACX,QAAQ,EAAE;MACxB;MACA,IAAI,CAACc,KAAK,CAACC,oBAAoB,CAACC,cAAc,CAAChB,QAAQ,CAAC;IAC5D,CAAC;IACDiB,QAAQA,CAAA,EAAG;MACTX,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,IAAI,CAACL,aAAY,GAAI,IAAI;IAC3B,CAAC;IACDgB,QAAQA,CAAA,EAAG;MACT,IAAI,CAAChB,aAAY,GAAI,KAAK;IAC5B,CAAC;IACDiB,SAASA,CAACC,OAAO,EAAE;MACjBvB,WAAW,CAACwB,OAAO,CAACD,OAAO,CAAC;MAC5B,IAAI,CAACjB,SAAQ,GAAIN,WAAW,CAACyB,YAAY,CAAC,CAAC;MAC3C,IAAI,CAACL,QAAQ,CAAC,CAAC;MACfX,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACJ,SAAS,CAACoB,MAAM,CAAC;MACzD;IACF,CAAC;IACDC,eAAeA,CAACC,KAAK,EAAE;MACrB,IAAI,CAACtB,SAAQ,GAAIsB,KAAK;IACxB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,aAAa,CAAC,CAAC;IACpBsB,QAAQ,CAACC,KAAI,GAAI,GAAG,IAAI,CAAC3B,QAAQ,EAAE;EACrC,CAAC;EACD4B,OAAOA,CAAA,EAAG;IACP;EAAA;AAGL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}