{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"cart-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Shopping Cart\", -1 /* HOISTED */)), $data.cartItems.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.product._id\n    }, [_createTextVNode(_toDisplayString(item.product.description) + \" x \" + _toDisplayString(item.quantity) + \" - $\" + _toDisplayString(item.product.price * item.quantity) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.cartService.removeItem(item.product._id)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_3), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      onChange: $event => $options.updateQuantity(item.product._id, $event.target.value),\n      min: \"1\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelText, item.quantity, void 0, {\n      number: true\n    }]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", null, \"Total: $\" + _toDisplayString($options.calculateTotal), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Your cart is empty.\"))])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_ctx","isVisible","_createElementBlock","_hoisted_1","_createElementVNode","$data","cartItems","length","_hoisted_2","_Fragment","_renderList","item","product","_id","_createTextVNode","_toDisplayString","description","quantity","price","onClick","$event","cartService","removeItem","_hoisted_3","type","onChange","$options","updateQuantity","target","value","min","_hoisted_4","number","calculateTotal","_hoisted_5","_createCommentVNode"],"sources":["C:\\Users\\sigmaa\\Desktop\\E-Commerce\\E-commerce-Website\\chatbot-app\\src\\CartComponent.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"isVisible\" class=\"cart-container\">\r\n      <h2>Shopping Cart</h2>\r\n      <div v-if=\"cartItems.length > 0\">\r\n        <div v-for=\"item in cartItems\" :key=\"item.product._id\">\r\n          {{ item.product.description }} x {{ item.quantity }} - ${{ item.product.price * item.quantity }}\r\n          <button @click=\"cartService.removeItem(item.product._id)\">Remove</button>\r\n          <input type=\"number\" v-model.number=\"item.quantity\" @change=\"updateQuantity(item.product._id, $event.target.value)\" min=\"1\">\r\n        </div>\r\n        <p>Total: ${{ calculateTotal }}</p>  </div>\r\n      <p v-else>Your cart is empty.</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import cartService from \"@/cart-service\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        cartItems: cartService.getCartItems(),\r\n      };\r\n    },\r\n    computed: {\r\n      calculateTotal() {\r\n        return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\r\n      },\r\n    },\r\n    methods: {\r\n        updateQuantity(productId, quantity) {\r\n            cartService.updateQuantity(productId, quantity);\r\n            this.cartItems = cartService.getCartItems();\r\n        }\r\n    }\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n.cart-container {\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  background-color: white;\r\n  box-shadow: -2px 0 5px rgba(0,0,0,0.1);\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n}\r\n</style>"],"mappings":";;EAAAA,GAAA;EAC0BC,KAAK,EAAC;;;EADhCD,GAAA;AAAA;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;SACeE,IAAA,CAAAC,SAAS,I,cAApBC,mBAAA,CAUM,OAVNC,UAUM,G,0BATJC,mBAAA,CAAsB,YAAlB,eAAa,sBACNC,KAAA,CAAAC,SAAS,CAACC,MAAM,Q,cAA3BL,mBAAA,CAM6C,OATnDM,UAAA,I,kBAIQN,mBAAA,CAIMO,SAAA,QARdC,WAAA,CAI4BL,KAAA,CAAAC,SAAS,EAAjBK,IAAI;yBAAhBT,mBAAA,CAIM;MAJ0BJ,GAAG,EAAEa,IAAI,CAACC,OAAO,CAACC;QAJ1DC,gBAAA,CAAAC,gBAAA,CAKaJ,IAAI,CAACC,OAAO,CAACI,WAAW,IAAG,KAAG,GAAAD,gBAAA,CAAGJ,IAAI,CAACM,QAAQ,IAAG,MAAI,GAAAF,gBAAA,CAAGJ,IAAI,CAACC,OAAO,CAACM,KAAK,GAAGP,IAAI,CAACM,QAAQ,IAAG,GAChG,iBAAAb,mBAAA,CAAyE;MAAhEe,OAAK,EAAAC,MAAA,IAAEpB,IAAA,CAAAqB,WAAW,CAACC,UAAU,CAACX,IAAI,CAACC,OAAO,CAACC,GAAG;OAAG,QAAM,iBAN1EU,UAAA,G,gBAOUnB,mBAAA,CAA4H;MAArHoB,IAAI,EAAC,QAAQ;MAP9B,uBAAAJ,MAAA,IAO+CT,IAAI,CAACM,QAAQ,GAAAG,MAAA;MAAGK,QAAM,EAAAL,MAAA,IAAEM,QAAA,CAAAC,cAAc,CAAChB,IAAI,CAACC,OAAO,CAACC,GAAG,EAAEO,MAAM,CAACQ,MAAM,CAACC,KAAK;MAAGC,GAAG,EAAC;6CAPlIC,UAAA,I,cAO+CpB,IAAI,CAACM,QAAQ,E;MAArBe,MAAM,EAAd;IAA8B,E;kCAErD5B,mBAAA,CAAmC,WAAhC,UAAQ,GAAAW,gBAAA,CAAGW,QAAA,CAAAO,cAAc,iB,oBAC9B/B,mBAAA,CAAiC,KAVvCgC,UAAA,EAUgB,qBAAmB,G,KAVnCC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}