{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Shopping Cart\", -1 /* HOISTED */)), $data.cartItems.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.product._id\n    }, [_createTextVNode(_toDisplayString(item.product.description) + \" x \" + _toDisplayString(item.quantity) + \" - $\" + _toDisplayString(item.product.price * item.quantity) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.cartService.removeItem(item.product._id)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_2), _withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.quantity = $event,\n      onChange: $event => $options.updateQuantity(item.product._id, $event.target.value),\n      min: \"1\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3), [[_vModelText, item.quantity, void 0, {\n      number: true\n    }]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", null, \"Total: $\" + _toDisplayString($options.calculateTotal()), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.cartService.clearCart())\n  }, \"Clear Cart\")])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"Your cart is empty.\"))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","cartItems","length","_hoisted_1","_Fragment","_renderList","item","product","_id","_createTextVNode","_toDisplayString","description","quantity","price","onClick","$event","_ctx","cartService","removeItem","_hoisted_2","type","onChange","$options","updateQuantity","target","value","min","_hoisted_3","number","calculateTotal","_cache","clearCart","_hoisted_4"],"sources":["C:\\Users\\sigmaa\\Desktop\\E-Commerce\\E-commerce-Website\\chatbot-app\\src\\CartComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Shopping Cart</h2>\r\n      <div v-if=\"cartItems.length > 0\">\r\n        <div v-for=\"item in cartItems\" :key=\"item.product._id\">\r\n          {{ item.product.description }} x {{ item.quantity }} - ${{ item.product.price * item.quantity }}\r\n          <button @click=\"cartService.removeItem(item.product._id)\">Remove</button>\r\n          <input type=\"number\" v-model.number=\"item.quantity\" @change=\"updateQuantity(item.product._id, $event.target.value)\" min=\"1\">\r\n        </div>\r\n        <p>Total: ${{ calculateTotal() }}</p>\r\n        <button @click=\"cartService.clearCart()\">Clear Cart</button>\r\n      </div>\r\n      <p v-else>Your cart is empty.</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import cartService from \"@/cart-service\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        cartItems: cartService.getCartItems(), // Initialize from the service\r\n      };\r\n    },\r\n    computed: {\r\n      calculateTotal() {\r\n        return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\r\n      },\r\n    },\r\n    methods: {\r\n        updateQuantity(productId, quantity) {\r\n            cartService.updateQuantity(productId, quantity);\r\n            this.cartItems = cartService.getCartItems(); // Update the cartItems array\r\n        }\r\n    }\r\n  };\r\n  </script>"],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAYM,c,0BAXJC,mBAAA,CAAsB,YAAlB,eAAa,sBACNC,KAAA,CAAAC,SAAS,CAACC,MAAM,Q,cAA3BJ,mBAAA,CAQM,OAXZK,UAAA,I,kBAIQL,mBAAA,CAIMM,SAAA,QARdC,WAAA,CAI4BL,KAAA,CAAAC,SAAS,EAAjBK,IAAI;yBAAhBR,mBAAA,CAIM;MAJ0BD,GAAG,EAAES,IAAI,CAACC,OAAO,CAACC;QAJ1DC,gBAAA,CAAAC,gBAAA,CAKaJ,IAAI,CAACC,OAAO,CAACI,WAAW,IAAG,KAAG,GAAAD,gBAAA,CAAGJ,IAAI,CAACM,QAAQ,IAAG,MAAI,GAAAF,gBAAA,CAAGJ,IAAI,CAACC,OAAO,CAACM,KAAK,GAAGP,IAAI,CAACM,QAAQ,IAAG,GAChG,iBAAAb,mBAAA,CAAyE;MAAhEe,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,WAAW,CAACC,UAAU,CAACZ,IAAI,CAACC,OAAO,CAACC,GAAG;OAAG,QAAM,iBAN1EW,UAAA,G,gBAOUpB,mBAAA,CAA4H;MAArHqB,IAAI,EAAC,QAAQ;MAP9B,uBAAAL,MAAA,IAO+CT,IAAI,CAACM,QAAQ,GAAAG,MAAA;MAAGM,QAAM,EAAAN,MAAA,IAAEO,QAAA,CAAAC,cAAc,CAACjB,IAAI,CAACC,OAAO,CAACC,GAAG,EAAEO,MAAM,CAACS,MAAM,CAACC,KAAK;MAAGC,GAAG,EAAC;6CAPlIC,UAAA,I,cAO+CrB,IAAI,CAACM,QAAQ,E;MAArBgB,MAAM,EAAd;IAA8B,E;kCAErD7B,mBAAA,CAAqC,WAAlC,UAAQ,GAAAW,gBAAA,CAAGY,QAAA,CAAAO,cAAc,oBAC5B9B,mBAAA,CAA4D;IAAnDe,OAAK,EAAAgB,MAAA,QAAAA,MAAA,MAAAf,MAAA,IAAEC,IAAA,CAAAC,WAAW,CAACc,SAAS;KAAI,YAAU,E,oBAErDjC,mBAAA,CAAiC,KAZvCkC,UAAA,EAYgB,qBAAmB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}