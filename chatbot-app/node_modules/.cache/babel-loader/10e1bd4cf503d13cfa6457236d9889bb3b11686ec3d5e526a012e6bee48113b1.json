{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport cartService from \"@/cart-service\";\nexport default {\n  props: {\n    isVisible: {\n      type: Boolean,\n      required: true\n    },\n    cartItems: {\n      type: Array,\n      default: () => [] // Provide a default value\n    }\n  },\n  methods: {\n    updateQuantity(productId, quantity) {\n      cartService.updateQuantity(productId, quantity);\n      this.$emit('update-cart', cartService.getCartItems());\n    },\n    removeItem(productId) {\n      cartService.removeItem(productId);\n      this.$emit('update-cart', cartService.getCartItems());\n    },\n    clearCart() {\n      cartService.clearCart();\n      this.$emit('update-cart', cartService.getCartItems());\n    }\n  },\n  computed: {\n    calculateTotal() {\n      return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\n    }\n  }\n};","map":{"version":3,"names":["cartService","props","isVisible","type","Boolean","required","cartItems","Array","default","methods","updateQuantity","productId","quantity","$emit","getCartItems","removeItem","clearCart","computed","calculateTotal","reduce","total","item","product","price"],"sources":["C:\\Users\\sigmaa\\Desktop\\E-Commerce\\E-commerce-Website\\chatbot-app\\src\\CartComponent.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isVisible\" class=\"cart-container\">\r\n    <div class=\"cart-header\">\r\n      <h2>Shopping Cart</h2>\r\n      <button class=\"close-button\" @click=\"$emit('close-cart')\">X</button>\r\n    </div>\r\n    <div v-if=\"cartItems.length > 0\">\r\n      <div v-for=\"item in cartItems\" :key=\"item.product._id\" class=\"cart-item\">\r\n        <img :src=\"item.product.image\" alt=\"Product Image\" class=\"product-image\" />\r\n        <div class=\"product-details\">\r\n          <h3>{{ item.product.description }}</h3>\r\n          <p>{{ item.product.price }} L.E</p>\r\n          <p>Quantity: \r\n            <input type=\"number\" v-model.number=\"item.quantity\" @change=\"updateQuantity(item.product._id, $event.target.value)\" min=\"1\">\r\n          </p>\r\n          <button @click=\"removeItem(item.product._id)\">Remove</button>\r\n        </div>\r\n      </div>\r\n      <p>Total: ${{ calculateTotal }}</p>\r\n      <button class=\"checkout-button\">Checkout</button>\r\n      <button class=\"clear-button\" @click=\"clearCart\">Clear Cart</button>\r\n    </div>\r\n    <p v-else>Your cart is empty. Start Adding Products!</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport cartService from \"@/cart-service\";\r\n\r\nexport default {\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    cartItems: {\r\n      type: Array,\r\n      default: () => [] // Provide a default value\r\n    }\r\n  },\r\n  methods: {\r\n    updateQuantity(productId, quantity) {\r\n      cartService.updateQuantity(productId, quantity);\r\n      this.$emit('update-cart', cartService.getCartItems());\r\n    },\r\n    removeItem(productId) {\r\n      cartService.removeItem(productId);\r\n      this.$emit('update-cart', cartService.getCartItems());\r\n    },\r\n    clearCart() {\r\n      cartService.clearCart();\r\n      this.$emit('update-cart', cartService.getCartItems());\r\n    }\r\n  },\r\n  computed: {\r\n    calculateTotal() {\r\n      return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cart-container {\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  background-color: white;\r\n  box-shadow: -2px 0 5px rgba(0,0,0,0.1);\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.cart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.cart-item {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-image {\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.product-details {\r\n  flex: 1;\r\n}\r\n\r\n.checkout-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n\r\n.checkout-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.clear-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #ff0000;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n\r\n.clear-button:hover {\r\n  background-color: #c23424;\r\n};\r\n</style>"],"mappings":";;AA2BA,OAAOA,WAAU,MAAO,gBAAgB;AAExC,eAAe;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEI,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM,EAAC,CAAE;IACpB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,SAAS,EAAEC,QAAQ,EAAE;MAClCZ,WAAW,CAACU,cAAc,CAACC,SAAS,EAAEC,QAAQ,CAAC;MAC/C,IAAI,CAACC,KAAK,CAAC,aAAa,EAAEb,WAAW,CAACc,YAAY,CAAC,CAAC,CAAC;IACvD,CAAC;IACDC,UAAUA,CAACJ,SAAS,EAAE;MACpBX,WAAW,CAACe,UAAU,CAACJ,SAAS,CAAC;MACjC,IAAI,CAACE,KAAK,CAAC,aAAa,EAAEb,WAAW,CAACc,YAAY,CAAC,CAAC,CAAC;IACvD,CAAC;IACDE,SAASA,CAAA,EAAG;MACVhB,WAAW,CAACgB,SAAS,CAAC,CAAC;MACvB,IAAI,CAACH,KAAK,CAAC,aAAa,EAAEb,WAAW,CAACc,YAAY,CAAC,CAAC,CAAC;IACvD;EACF,CAAC;EACDG,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACZ,SAAS,CAACa,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,OAAO,CAACC,KAAI,GAAIF,IAAI,CAACT,QAAQ,EAAE,CAAC,CAAC;IAC9F;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}