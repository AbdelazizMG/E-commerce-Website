{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport cartService from \"@/cart-service\";\nexport default {\n  data() {\n    return {\n      cartItems: cartService.getCartItems(),\n      isVisible: false\n    };\n  },\n  computed: {\n    calculateTotal() {\n      return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\n    }\n  },\n  methods: {\n    updateQuantity(productId, quantity) {\n      cartService.updateQuantity(productId, quantity);\n      this.cartItems = cartService.getCartItems();\n    }\n  }\n};","map":{"version":3,"names":["cartService","data","cartItems","getCartItems","isVisible","computed","calculateTotal","reduce","total","item","product","price","quantity","methods","updateQuantity","productId"],"sources":["C:\\Users\\sigmaa\\Desktop\\E-Commerce\\E-commerce-Website\\chatbot-app\\src\\CartComponent.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"isVisible\" class=\"cart-container\">\r\n      <h2>Shopping Cart</h2>\r\n      <div v-if=\"cartItems.length > 0\">\r\n        <div v-for=\"item in cartItems\" :key=\"item.product._id\">\r\n          {{ item.product.description }} x {{ item.quantity }} - ${{ item.product.price * item.quantity }}\r\n          <button @click=\"cartService.removeItem(item.product._id)\">Remove</button>\r\n          <input type=\"number\" v-model.number=\"item.quantity\" @change=\"updateQuantity(item.product._id, $event.target.value)\" min=\"1\">\r\n        </div>\r\n        <p>Total: ${{ calculateTotal }}</p>  </div>\r\n      <p v-else>Your cart is empty.</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import cartService from \"@/cart-service\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        cartItems: cartService.getCartItems(),\r\n        isVisible: false,\r\n      };\r\n    },\r\n    computed: {\r\n      calculateTotal() {\r\n        return this.cartItems.reduce((total, item) => total + item.product.price * item.quantity, 0);\r\n      },\r\n    },\r\n    methods: {\r\n        updateQuantity(productId, quantity) {\r\n            cartService.updateQuantity(productId, quantity);\r\n            this.cartItems = cartService.getCartItems();\r\n        }\r\n    }\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n.cart-container {\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  background-color: white;\r\n  box-shadow: -2px 0 5px rgba(0,0,0,0.1);\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n}\r\n</style>"],"mappings":";;AAeE,OAAOA,WAAU,MAAO,gBAAgB;AAExC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAEF,WAAW,CAACG,YAAY,CAAC,CAAC;MACrCC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,OAAO,CAACC,KAAI,GAAIF,IAAI,CAACG,QAAQ,EAAE,CAAC,CAAC;IAC9F;EACF,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAACC,SAAS,EAAEH,QAAQ,EAAE;MAChCZ,WAAW,CAACc,cAAc,CAACC,SAAS,EAAEH,QAAQ,CAAC;MAC/C,IAAI,CAACV,SAAQ,GAAIF,WAAW,CAACG,YAAY,CAAC,CAAC;IAC/C;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}